<!doctype html>
<html lang="en">
{% include 'head.html.twig' %}
<body>
<div class="container-fluid">
    <h1 class="display-6">Hova m√©sz bev√°s√°rolni?</h1>
    <form action="planned" method="get">
        <fieldset class="row mb-2">
            {% for availableSupermarket in availableSupermarkets %}
                {% set availableSupermarketKey = availableSupermarket|replace({' ': '_'}) %}
                <div class="col-md-12">
                    <div class="form-check">
                        <input
                                type="radio"
                                id="{{ availableSupermarketKey }}"
                                value="{{ availableSupermarket }}"
                                name="supermarket"
                                class="form-check-input"
                                {% if availableSupermarket == defaultSupermarket %}checked=checked{% endif %}
                        >
                        <label for="{{ availableSupermarketKey }}" class="form-check-label">
                            {{ availableSupermarket }}
                        </label>
                    </div>
                </div>
            {% endfor %}
        </fieldset>

        <h1 class="display-6">Melyik kaj√°khoz kell bev√°s√°rolni?</h1>

        <div class="col-md-12">
                <div
                        class="btn badge text-bg-secondary"
                        onclick="resetTags()">Reset</div>
            {% for tag in availableFoodTags %}
                <div
                        class="btn badge {% if tag in selectedFoodTags %}text-bg-warning{% else %}text-bg-info{% endif %}"
                        data-value="{{ tag }}"
                        onclick="filterForTag(this, {{ selectedFoodTags|json_encode }})">
                    {{ tag }}
                </div>
            {% endfor %}
        </div>
        <hr class="border">

        {% for availableFood in availableFoods %}
            {% set availableFoodName = availableFood.name %}
            {% set availableFoodNameKey = availableFoodName|replace({' ': '_'}) %}
            {% set isAvailableFoodSelected = selectedFoods[availableFoodName] is defined %}
            {% set portion = isAvailableFoodSelected ? selectedFoods[availableFoodName] : availableFood.defaultPortion %}
            <fieldset class="row mb-2">
                <div class="col-md-8">
                    <div class="form-check form-switch">
                        <input
                                type="checkbox"
                                role="switch"
                                id="food-{{ availableFoodNameKey }}"
                                value="{{ availableFoodName }}"
                                name="food-{{ availableFoodNameKey }}"
                                class="form-check-input"
                                onchange="foodSwitchChange(this, '{{ availableFoodNameKey }}')"
                                {% if isAvailableFoodSelected %}checked="checked"{% endif %}
                        >
                        <label for="food-{{ availableFoodNameKey }}" class="form-check-label">{{ availableFoodName }}</label>
                        {% for tag in availableFood.tags %}
                            <span class="badge text-bg-info">{{ tag }}</span>
                        {% endfor %}
                        <output id="portion-output-{{ availableFoodNameKey }}">({{ portion }} Adag)</output>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <input
                                type="range"
                                id="portion-{{ availableFoodNameKey }}"
                                value="{{ portion }}"
                                name="portion-{{ availableFoodNameKey }}"
                                class="form-range"
                                min="1"
                                max="12"
                                step="1"
                                {% if not isAvailableFoodSelected %}disabled="disabled"{% endif %}
                                oninput="foodPortionChange(this, '{{ availableFoodNameKey }}')"
                                onmouseup="foodPortionMouseUp(this, '{{ availableFoodNameKey }}')"
                                ontouchend="foodPortionMouseUp(this, '{{ availableFoodNameKey }}')"
                        >
                    </div>
                </div>
            </fieldset>
        {% endfor %}

        <div class="sticky-bottom">
            <div class="row justify-content-center sticky-bottom-btn-row">
                <a href="/" class="btn btn-warning col-3 text-center" title="HOME">üè†</a>
                <div class="col-1"></div>
                <a href="{{ ingredientStorageUrl }}" class="btn btn-info col-3 text-center" title="STORAGE">üì¶</a>
                <div class="col-1"></div>
                <button type="submit" class="btn btn-primary col-3 text-center" title="PLAN">‚úÖ</button>
            </div>
        </div>
    </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
    {% include 'dark-theme.js.twig' %}

    function resetTags() {
        const url = new URL(window.location.href);

        url.searchParams.delete('tags[]');
        window.location.href = url.toString();

        return;
    }

    function filterForTag(elem, selectedTags) {
        const url = new URL(window.location.href);
        const selectedTag = elem.getAttribute('data-value');

        if (selectedTags.includes(selectedTag)) {
            url.searchParams.delete('tags[]', selectedTag);

            window.location.href = url.toString();

            return;
        }

        const tags = [];
        tags.push(selectedTag);

        url.searchParams.append('tags[]', tags);

        window.location.href = url.toString();
    }

    function foodSwitchChange(elem, availableFoodNameKey) {
        const food = elem.value;
        const portion = document.getElementById('portion-' + availableFoodNameKey).value;
        const url = new URL(window.location.href);

        if (elem.checked) {
            url.searchParams.append('food-' + availableFoodNameKey, food);
            url.searchParams.append('portion-' + availableFoodNameKey, portion);

            document.getElementById('portion-' + availableFoodNameKey).disabled = '';
        }
        else {
            url.searchParams.delete('food-' + availableFoodNameKey, food);
            url.searchParams.delete('portion-' + availableFoodNameKey, portion);

            document.getElementById('portion-' + availableFoodNameKey).disabled = 'disabled';
        }

        window.history.pushState(null, '', url.toString());
    }

    function foodPortionChange(elem, availableFoodNameKey) {
        const portion = elem.value;

        document.getElementById('portion-output-' + availableFoodNameKey).value = '(' + portion + ' Adag)';
    }

    function foodPortionMouseUp(elem, availableFoodNameKey) {
        const food = document.getElementById('food-' + availableFoodNameKey).value;
        const portion = elem.value;
        const url = new URL(window.location.href);
        let update = false;

        update = update || updateUrlSearchParams('food-' + availableFoodNameKey, food, url);
        update = update || updateUrlSearchParams('portion-' + availableFoodNameKey, portion, url);

        if (update) {
            window.history.pushState(null, '', url.toString());
        }
    }

    function updateUrlSearchParams(name, value, url) {
        const searchParam = url.searchParams.get(name);

        if (searchParam && searchParam === value) {
            return false;
        }

        if (searchParam) {
            url.searchParams.set(name, value);
        }
        else {
            url.searchParams.append(name, value);
        }

        return true;
    }
</script>
</body>
</html>
