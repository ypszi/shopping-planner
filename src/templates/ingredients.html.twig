<!doctype html>
<html lang="en">
{% include 'head.html.twig' %}
<body>
<div class="container-fluid">
    <h1 id="top" class="display-6">L√°ssuk mi van otthon...</h1>
    <ul>
        {% for ingredientCategory, availableIngredients in ingredientStorage %}
            <li>
                <a href="#{{ ingredientCategory|url_encode }}">{{ ingredientCategory }}</a>
            </li>
        {% endfor %}
    </ul>
    <form action="/storage/ingredients" method="post">
        {% for ingredientCategory, availableIngredients in ingredientStorage %}
            <h1 id="{{ ingredientCategory|url_encode }}" class="mt-2 fs-3">
                {{ ingredientCategory }}
                <a class="anchor-link" href="#{{ ingredientCategory|url_encode }}"></a>
            </h1>

            {% for availableIngredient in availableIngredients %}
                {% set availableIngredientName = availableIngredient.name %}
                {% set availableIngredientNameKey = availableIngredientName|replace({' ': '_'}) %}
                <fieldset class="row mb-2">
                    <div class="col-md-8">
                        <div class="form-check form-switch">
                            <input
                                    type="checkbox"
                                    role="switch"
                                    id="{{ availableIngredientNameKey }}"
                                    value="{{ availableIngredientName }}"
                                    name="ingredient-{{ availableIngredientNameKey }}"
                                    class="form-check-input ingredient-toggle"
                                    onchange="ingredientToggle(this, '{{ availableIngredientNameKey }}')"
                                    {% if availableIngredient.portion != 0 %}checked="checked"{% endif %}
                            >
                            <label for="{{ availableIngredientNameKey }}" class="form-check-label">{{ availableIngredientName }}</label>
                            <output id="portion-output-{{ availableIngredientNameKey }}">({{ availableIngredient.ingredientPortion }})</output>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-group">
                            <input
                                    type="range"
                                    id="portion-{{ availableIngredientNameKey }}"
                                    value="{{ availableIngredient.portion }}"
                                    name="portion-{{ availableIngredientNameKey }}"
                                    class="form-range ingredient-portion"
                                    min="0"
                                    max="{{ ingredientMeasureMapByName[availableIngredient.name].max ?? ingredientMeasureMapByCategory[ingredientCategory].max }}"
                                    step="{{ ingredientMeasureMapByName[availableIngredient.name].step ?? ingredientMeasureMapByCategory[ingredientCategory].step }}"
                                    oninput="ingredientValueChange(this, '{{ availableIngredientNameKey }}', '{{ availableIngredient.measurePreference.value }}')"
                                    {% if availableIngredient.portion == 0 %}disabled="disabled"{% endif %}
                                    data-default-value="{{ availableIngredient.portion }}"
                            >
                            <input
                                    type="hidden"
                                    id="measure-{{ availableIngredientNameKey }}"
                                    value="{{ availableIngredient.measurePreference.value }}"
                                    name="measure-{{ availableIngredientNameKey }}"
                                    {% if availableIngredient.portion == 0 %}disabled="disabled"{% endif %}
                            >
                        </div>
                    </div>
                </fieldset>
            {% endfor %}
        {% endfor %}

        <div class="sticky-bottom">
            <div class="row justify-content-center sticky-bottom-btn-row">
                <a href="/" class="btn btn-warning col-3 text-center" title="HOME">üè†</a>
                <div class="col-1"></div>
                <a href="#top" class="btn btn-info col-3 text-center" title="TO THE TOP">‚¨ÜÔ∏è</a>
                <div class="col-1"></div>
                <button class="btn btn-primary col-3 text-center" title="SAVE" type="submit">‚úÖ</button>
            </div>
        </div>
    </form>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
    {% include 'dark-theme.js.twig' %}

    const beforeUnloadHandler = (event) => {
        // Recommended
        event.preventDefault();

        // Included for legacy support, e.g. Chrome/Edge < 119
        event.returnValue = true;
    };

    // TODO: create listener for each ingredient-toggle to remove this listener when disabled [peter.pecosz]
    // Array.from(document.getElementsByClassName('ingredient-portion')).forEach((elem) => {
    //     elem.addEventListener('input', (event) => {
    //         console.log(event.currentTarget.disabled);
    //
    //         if (event.target.value !== event.currentTarget.dataset.defaultValue) {
    //             window.addEventListener('beforeunload', beforeUnloadHandler);
    //         } else {
    //             window.removeEventListener('beforeunload', beforeUnloadHandler);
    //         }
    //     });
    // });

    function ingredientToggle(elem, availableIngredientNameKey) {
        if (elem.checked) {
            document.getElementById('portion-' + availableIngredientNameKey).disabled = '';
            document.getElementById('measure-' + availableIngredientNameKey).disabled = ''
        }
        else {
            document.getElementById('portion-' + availableIngredientNameKey).disabled = 'disabled';
            document.getElementById('measure-' + availableIngredientNameKey).disabled = 'disabled';
        }
    }

    function ingredientValueChange(elem, availableIngredientNameKey, measureUnit) {
        document
            .getElementById('portion-output-' + availableIngredientNameKey)
            .value = '(' + (Math.round(elem.value * 100) / 100) + ' ' + measureUnit + ')'
    }
</script>
</body>
</html>
